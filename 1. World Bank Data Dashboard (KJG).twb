<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' inline='true' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World bank Report - Year (2000 - 2010)' name='excel-direct.1fdlw6a0ebzody15fij800w5he3l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Courses/Tableaue/World bank Report - Year (2000 - 2010).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Union].[Country Name]' />
              <expression op='[Region].[Country]' />
            </expression>
          </clause>
          <relation all='true' name='Union' type='union'>
            <columns header='yes'>
              <column datatype='string' name='Country Name' />
              <column datatype='date' name='Date' />
              <column datatype='integer' name='Transit: Railways, (million passenger-km)' />
              <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' />
              <column datatype='integer' name='Business: Mobile phone subscribers' />
              <column datatype='integer' name='Business: Internet users (per 100 people)' />
              <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' />
              <column datatype='integer' name='Health: Health expenditure per capita (current US$)' />
              <column datatype='integer' name='Health: Health expenditure, total (% GDP)' />
              <column datatype='integer' name='Population: Total (count)' />
              <column datatype='integer' name='Population: Urban (count)' />
              <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' />
              <column datatype='integer' name='Health: Life expectancy at birth, female (years)' />
              <column datatype='integer' name='Health: Life expectancy at birth, male (years)' />
              <column datatype='integer' name='Health: Life expectancy at birth, total (years)' />
              <column datatype='integer' name='Population: Ages 0-14 (% of total)' />
              <column datatype='integer' name='Population: Ages 15-64 (% of total)' />
              <column datatype='integer' name='Population: Ages 65+ (% of total)' />
              <column datatype='integer' name='Finance: GDP (current US$)' />
              <column datatype='integer' name='Finance: GDP per capita (current US$)' />
              <column datatype='date' date-parse-format='yyyy' name='Sheet' />
              <column datatype='date' date-parse-format='yyyy' name='Table Name' />
            </columns>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2000' table='[&apos;2000$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2001' table='[&apos;2001$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2002' table='[&apos;2002$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2003' table='[&apos;2003$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2004' table='[&apos;2004$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2005' table='[&apos;2005$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2006' table='[&apos;2006$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2007' table='[&apos;2007$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2008' table='[&apos;2008$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2009' table='[&apos;2009$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
            <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2010' table='[&apos;2010$&apos;]' type='table'>
              <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                <column datatype='string' name='Country Name' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='Region' table='[Region$]' type='table'>
            <columns gridOrigin='A1:C235:no:A1:C235:0' header='yes' outcome='6'>
              <column datatype='string' name='Region' ordinal='0' />
              <column datatype='string' name='Subregion' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Region]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C235:no:A1:C235:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Region]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subregion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subregion]</local-name>
            <parent-name>[Region]</parent-name>
            <remote-alias>Subregion</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Region]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, female (years):qk]&quot;' value='Female' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, male (years):qk]&quot;' value='Male' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]&quot;' value='Average' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (\% of total):qk]&quot;' value='Age: 0-14 (%)' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (\% of total):qk]&quot;' value='Age: 15-64 (%)' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (\% of total):qk]&quot;' value='Age 65+ (%)' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Total (count):qk]&quot;' value='Total' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Urban (count):qk]&quot;' value='Urban' />
          <alias key='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[usr:Calculation_192810401377144834:qk]&quot;' value='Rural' />
        </aliases>
      </column>
      <column caption='Internet users (per 100 people)' datatype='integer' name='[Business: Internet users (per 100 people)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Business: Mobile phone subscribers]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Health: Life expectancy at birth, female (years)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Health: Life expectancy at birth, male (years)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Health: Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Population: Ages 0-14 (% of total) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Population: Ages 0-14 (% of total)]' peg='0' size='3.21' />
      </column>
      <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population: Urban (count)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Transit: Railways, (million passenger-km)]' role='measure' type='quantitative' />
      <column caption='Union' datatype='table' name='[__tableau_internal_object_id__].[_52766BBE0A154384A64FD87E8A7EBE7C]' role='measure' type='quantitative' />
      <column-instance column='[Health: Life expectancy at birth, female (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, female (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health: Life expectancy at birth, male (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, male (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health: Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Avg' name='[avg:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Avg' name='[avg:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Avg' name='[avg:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Business: Internet users (per 100 people)]' derivation='Sum' name='[sum:Business: Internet users (per 100 people):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Business: Mobile phone subscribers]' derivation='Sum' name='[sum:Business: Mobile phone subscribers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population: Urban (count)]' derivation='Sum' name='[sum:Population: Urban (count):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transit: Railways, (million passenger-km)]' derivation='Sum' name='[sum:Transit: Railways, (million passenger-km):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date)) 1' hidden='true' name='[Action (YEAR(Date)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),Region)' hidden='true' name='[Action (YEAR(Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/GUNA-G~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0rimt2j1jdchwv18hvv3p1firvbj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/14/2025 10:59:00 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>Union</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transit: Railways, (million passenger-km)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Transit: Railways, (million passenger-km)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
              <ordinal>2</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>503</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
              <ordinal>3</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Business: Mobile phone subscribers</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Business: Mobile phone subscribers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Business: Mobile phone subscribers</remote-alias>
              <ordinal>4</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1413</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Business: Internet users (per 100 people)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Business: Internet users (per 100 people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Business: Internet users (per 100 people)</remote-alias>
              <ordinal>5</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
              <ordinal>6</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
              <ordinal>7</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>702</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
              <ordinal>8</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population: Total (count)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population: Total (count)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population: Total (count)</remote-alias>
              <ordinal>9</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1623</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population: Urban (count)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population: Urban (count)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population: Urban (count)</remote-alias>
              <ordinal>10</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1595</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
              <ordinal>11</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
              <ordinal>12</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
              <ordinal>13</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
              <ordinal>14</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population: Ages 0-14 (% of total)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population: Ages 0-14 (% of total)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
              <ordinal>15</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population: Ages 15-64 (% of total)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population: Ages 15-64 (% of total)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
              <ordinal>16</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population: Ages 65+ (% of total)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population: Ages 65+ (% of total)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
              <ordinal>17</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Finance: GDP (current US$)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Finance: GDP (current US$)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Finance: GDP (current US$)</remote-alias>
              <ordinal>18</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1518</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Finance: GDP per capita (current US$)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Finance: GDP per capita (current US$)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
              <ordinal>19</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1347</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sheet</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Sheet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sheet</remote-alias>
              <ordinal>20</ordinal>
              <family>Union</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>21</ordinal>
              <family>Union</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>22</ordinal>
              <family>Region</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subregion</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subregion]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subregion</remote-alias>
              <ordinal>23</ordinal>
              <family>Region</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>24</ordinal>
              <family>Region</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>224</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[_52766BBE0A154384A64FD87E8A7EBE7C]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='250' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (\% of total):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP per capita (current US$):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Total (count):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Transit: Railways, (million passenger-km):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (\% of total):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (\% of total):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Internet users (per 100 people):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Svalbard and Jan Mayen Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guerney and Alderney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican City State (Holy See)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Barthélemy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Country]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Country]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Albania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Algeria&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;American Samoa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Angola&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Anguilla&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Antigua and Barbuda&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Argentina&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Armenia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Aruba&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Austria&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Azerbaijan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bahamas, The&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Barbados&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Belarus&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Belgium&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Belize&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Benin&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bermuda&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bhutan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bolivia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Botswana&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;British Virgin Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Brunei Darussalam&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Burkina Faso&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Burundi&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cambodia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cameroon&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cape Verde&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cayman Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Central African Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Chad&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Chile&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Colombia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Comoros&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Congo, Dem. Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Congo, Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Costa Rica&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cote d&apos;Ivoire&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Croatia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cuba&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Curacao&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Cyprus&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Czech Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Dominica&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Ecuador&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Egypt, Arab Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;El Salvador&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Equatorial Guinea&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Eritrea&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Ethiopia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;European Union&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Faeroe Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Falkland Islands (Malvinas)&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Fiji&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;French Guiana&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;French Polynesia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Gabon&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Gambia, The&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Ghana&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Gibraltar&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Greece&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Greenland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Grenada&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guadeloupe&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guam&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guerney and Alderney&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guinea&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guinea-Bissau&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Guyana&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Honduras&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Hong Kong SAR, China&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Iran, Islamic Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Iraq&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Isle of Man&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Israel&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Jamaica&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Jersey&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Jordan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kazakhstan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kenya&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kiribati&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Korea, Dem. Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Korea, Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kosovo&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kuwait&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Kyrgyz Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Lao PDR&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Latvia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Lebanon&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Lesotho&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Libya&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Liechtenstein&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Lithuania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Luxembourg&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Macao SAR, China&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Macedonia, FYR&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Madagascar&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Malawi&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Malaysia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Maldives&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mali&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Malta&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Marshall Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Martinique&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mauritania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mauritius&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mayotte&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Micronesia, Fed. Sts.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mongolia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Monserrat&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Montenegro&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Morocco&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Myanmar&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Namibia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Nepal&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;New Caledonia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Nicaragua&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Northern Africa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Oman&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Palestine&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Papua New Guinea&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Paraguay&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Peru&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Philippines&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Puerto Rico&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Qatar&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Reunion&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Romania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Russian Federation&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Rwanda&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Saint Helena&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Saint Pierre and Miquelon&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Saint-Barthélemy&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Samoa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;San Marino&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sao Tome and Principe&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Saudi Arabia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Senegal&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Seychelles&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sierra Leone&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sint Maarten (Dutch part)&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Slovak Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Slovenia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Solomon Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Somalia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;South Sudan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Southern Africa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Spain&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sri Lanka&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;St. Kitts and Nevis&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;St. Lucia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;St. Martin (French part)&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;St. Vincent and the Grenadines&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sudan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Suriname&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Svalbard and Jan Mayen Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Swaziland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Switzerland&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Syrian Arab Republic&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Taiwan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Tajikistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Tanzania&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Timor-Leste&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Togo&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Tonga&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Trinidad and Tobago&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Tunisia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Turkey&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Turkmenistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Turks and Caicos Islands&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Uganda&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Ukraine&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United Arab Emirates&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Uruguay&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Uzbekistan&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Vanuatu&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Vatican City State (Holy See)&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Venezuela, RB&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Vietnam&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Virgin Islands (U.S.)&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Western Africa&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Western Sahara&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Yemen, Rep.&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Zambia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='Union' id='_52766BBE0A154384A64FD87E8A7EBE7C'>
            <properties context=''>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Union].[Country Name]' />
                    <expression op='[Region].[Country]' />
                  </expression>
                </clause>
                <relation all='true' name='Union' type='union'>
                  <columns header='yes'>
                    <column datatype='string' name='Country Name' />
                    <column datatype='date' name='Date' />
                    <column datatype='integer' name='Transit: Railways, (million passenger-km)' />
                    <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' />
                    <column datatype='integer' name='Business: Mobile phone subscribers' />
                    <column datatype='integer' name='Business: Internet users (per 100 people)' />
                    <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' />
                    <column datatype='integer' name='Health: Health expenditure per capita (current US$)' />
                    <column datatype='integer' name='Health: Health expenditure, total (% GDP)' />
                    <column datatype='integer' name='Population: Total (count)' />
                    <column datatype='integer' name='Population: Urban (count)' />
                    <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' />
                    <column datatype='integer' name='Health: Life expectancy at birth, female (years)' />
                    <column datatype='integer' name='Health: Life expectancy at birth, male (years)' />
                    <column datatype='integer' name='Health: Life expectancy at birth, total (years)' />
                    <column datatype='integer' name='Population: Ages 0-14 (% of total)' />
                    <column datatype='integer' name='Population: Ages 15-64 (% of total)' />
                    <column datatype='integer' name='Population: Ages 65+ (% of total)' />
                    <column datatype='integer' name='Finance: GDP (current US$)' />
                    <column datatype='integer' name='Finance: GDP per capita (current US$)' />
                    <column datatype='date' date-parse-format='yyyy' name='Sheet' />
                    <column datatype='date' date-parse-format='yyyy' name='Table Name' />
                  </columns>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2000' table='[&apos;2000$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2001' table='[&apos;2001$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2002' table='[&apos;2002$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2003' table='[&apos;2003$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2004' table='[&apos;2004$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2005' table='[&apos;2005$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2006' table='[&apos;2006$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2007' table='[&apos;2007$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2008' table='[&apos;2008$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2009' table='[&apos;2009$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='2010' table='[&apos;2010$&apos;]' type='table'>
                    <columns gridOrigin='A1:T215:no:A1:T215:0' header='yes' outcome='2'>
                      <column datatype='string' name='Country Name' ordinal='0' />
                      <column datatype='date' name='Date' ordinal='1' />
                      <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='2' />
                      <column datatype='string' name='Transit: Passenger cars (per 1,000 people)' ordinal='3' />
                      <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='4' />
                      <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='5' />
                      <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='6' />
                      <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='7' />
                      <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='8' />
                      <column datatype='integer' name='Population: Total (count)' ordinal='9' />
                      <column datatype='integer' name='Population: Urban (count)' ordinal='10' />
                      <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='11' />
                      <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='12' />
                      <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='13' />
                      <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='14' />
                      <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='15' />
                      <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='16' />
                      <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='17' />
                      <column datatype='integer' name='Finance: GDP (current US$)' ordinal='18' />
                      <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='19' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.1fdlw6a0ebzody15fij800w5he3l' name='Region' table='[Region$]' type='table'>
                  <columns gridOrigin='A1:C235:no:A1:C235:0' header='yes' outcome='6'>
                    <column datatype='string' name='Region' ordinal='0' />
                    <column datatype='string' name='Subregion' ordinal='1' />
                    <column datatype='string' name='Country' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='&lt;[Country]&gt;' name='[Action2_3D8B6B7EA68D4D07A234C22B0ADDCC5B]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Mobile' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_657EE89077924EFEAB08A72C71F01D34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Mobile' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_45531D7336554FBA82072EAAD9CB6EE3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='GDP' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4_915BDFAC9C1E4F4CA0D2D5302E0A4DA0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action3_657EE89077924EFEAB08A72C71F01D34]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Latitude (generated)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Longitude (generated)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' />
              <text column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' />
              <lod column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' />
              <geometry column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Latitude (generated)]</rows>
        <cols>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7E84ABD6-0B24-4700-91E3-65D77F299F0E}' />
    </worksheet>
    <worksheet name='GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Country GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk]' scope='rows' value='GDP' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Region:nk] * [federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk])</rows>
        <cols>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{F6C847EC-5EA7-457F-9C50-FF7964AD091E}' />
    </worksheet>
    <worksheet name='LE'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f28e2b' fontsize='14'>Life Expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Health: Life expectancy at birth, female (years)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health: Life expectancy at birth, male (years)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health: Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Health: Life expectancy at birth, female (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, female (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health: Life expectancy at birth, male (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, male (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health: Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Health: Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, male (years):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, female (years):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, male (years):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, female (years):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='14' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='color' data-class='total' value='#8cd17d' />
            <format attr='color' data-class='total' scope='rows' value='#000000' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='font-size' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Multiple Values]' value='10' />
            <format attr='color' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Multiple Values]' value='#b6992d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='152' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#faf4e7' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='background-color' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='#fefaf1' />
            <format attr='color' data-class='subtotal' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='#b6992d' />
            <format attr='color' data-class='total' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='#d3b348' />
            <format attr='background-color' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]' value='#ebebeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#b6992d' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='10' />
            <format attr='color' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='#1b1b1b' />
            <format attr='font-size' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]' value='12' />
            <format attr='font-weight' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Health: Life expectancy at birth, total (years):qk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{BDBD3F69-E055-4AF8-AB47-E2D7409A8C17}' />
    </worksheet>
    <worksheet name='Mobile'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Mobile Subscribers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column caption='Internet users (per 100 people)' datatype='integer' name='[Business: Internet users (per 100 people)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Business: Mobile phone subscribers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Business: Internet users (per 100 people)]' derivation='Sum' name='[sum:Business: Internet users (per 100 people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Business: Mobile phone subscribers]' derivation='Sum' name='[sum:Business: Mobile phone subscribers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' />
              <size column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]' />
              <text column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' />
              <lod column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Internet users (per 100 people):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5486B2A4-8743-46E6-B684-DA89751F867E}' />
    </worksheet>
    <worksheet name='Per'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Per Capital Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP per capita (current US$):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[tyr:Date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[tyr:Date:qk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP per capita (current US$):qk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[tyr:Date:ok]</rows>
        <cols>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP per capita (current US$):qk]</cols>
      </table>
      <simple-id uuid='{427808E0-1BFB-4847-97D8-C0116344A193}' />
    </worksheet>
    <worksheet name='Pop'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column caption='SUM([Population: Total (count)]) - sum([Population: Urban (co...' datatype='integer' name='[Calculation_192810401377144834]' role='measure' type='quantitative' user:unnamed='T.pop'>
              <calculation class='tableau' formula='SUM([Population: Total (count)]) - sum([Population: Urban (count)])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Urban (count)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Urban (count)]' derivation='Sum' name='[sum:Population: Urban (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_192810401377144834]' derivation='User' name='[usr:Calculation_192810401377144834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Total (count):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Urban (count):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[usr:Calculation_192810401377144834:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Total (count):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Urban (count):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[usr:Calculation_192810401377144834:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-size' data-class='subtotal' value='16' />
            <format attr='color' data-class='total' value='#e15759' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='width' value='130' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' value='#f5f5f5' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' scope='rows' value='#ffffff' />
            <format attr='background-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
            <format attr='band-size' scope='cols' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#f28e2b' />
            <format attr='font-size' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{620ECF16-BAF6-4E0A-8977-2A247BF479E4}' />
    </worksheet>
    <worksheet name='Pop - Sep'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Population Secretion</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Union+ (World bank Report - Year (2000 - 2010))' name='federated.0a3qp8r0r77t0w18izxyf1um1kom' />
          </datasources>
          <datasource-dependencies datasource='federated.0a3qp8r0r77t0w18izxyf1um1kom'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Avg' name='[avg:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Avg' name='[avg:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Avg' name='[avg:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (\% of total):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (\% of total):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (\% of total):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (\% of total):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (\% of total):qk]&quot;</bucket>
              <bucket>&quot;[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (\% of total):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1_46904ACB7E44446ABED8FC1CF944C0F0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_45531D7336554FBA82072EAAD9CB6EE3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (% of total):qk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (Country)]</column>
            <column>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Action (YEAR(Date),Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (% of total):qk]' scope='rows' value='Age: 65+ (% )' />
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (% of total):qk]' scope='rows' value='Age: 15-64 (%)' />
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (% of total):qk]' scope='rows' value='Age: 0-14 (%)' />
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 0-14 (% of total):qk]' scope='cols' value='Ages 0-14 (%)' />
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 15-64 (% of total):qk]' scope='cols' value='Ages 15-64 (%)' />
            <format attr='title' class='0' field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[avg:Population: Ages 65+ (% of total):qk]' scope='cols' value='Ages 65+ (%)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' value='14' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='16' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#f28e2b' />
            <format attr='font-size' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[Multiple Values]</rows>
        <cols>([federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk] / [federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{9630FF78-221A-4C00-B231-3A2D99582BE3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='41' param='horz' type-v2='layout-flow' w='98614' x='693' y='1449'>
            <zone h='97102' id='36' param='horz' type-v2='layout-flow' w='98614' x='693' y='1449'>
              <zone h='97102' id='33' param='vert' type-v2='layout-flow' w='98614' x='693' y='1449'>
                <zone h='97102' id='31' param='horz' type-v2='layout-flow' w='98614' x='693' y='1449'>
                  <zone h='97102' id='10' type-v2='layout-basic' w='98614' x='693' y='1449'>
                    <zone h='48558' id='15' name='GDP' w='36174' x='26947' y='49993'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='52186' id='25' name='Mobile' w='26254' x='693' y='46365'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='19022' id='18' name='LE' w='26254' x='693' y='27343'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='25894' id='28' name='Pop' w='26254' x='693' y='1449'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='48558' id='29' name='Pop - Sep' w='36186' x='63121' y='49993'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='48544' id='34' name='Per' w='36181' x='63126' y='1449'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='48544' id='39' name='Country' w='36179' x='26947' y='1449'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='44' param='vert' type-v2='layout-flow' w='98614' x='693' y='1449'>
                <zone fixed-size='199' h='25894' id='28' is-fixed='true' name='Pop' w='26254' x='693' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48544' id='39' is-fixed='true' name='Country' w='36179' x='26947' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48544' id='34' is-fixed='true' name='Per' w='36181' x='63126' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='144' h='19022' id='18' is-fixed='true' name='LE' w='26254' x='693' y='27343'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52186' id='25' is-fixed='true' name='Mobile' w='26254' x='693' y='46365'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48558' id='15' is-fixed='true' name='GDP' w='36174' x='26947' y='49993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48558' id='29' is-fixed='true' name='Pop - Sep' w='36186' x='63121' y='49993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D5885618-BA76-4BC6-981E-0367B593164B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Country'>
          <zoom type='entire-view' />
          <highlight field='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='LE'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Mobile'>
          <zoom type='fit-height' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Internet users (per 100 people):qk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;United States&quot;</value>
                  <value>710</value>
                  <value>2210334031</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Internet users (per 100 people):qk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;India&quot;</value>
                  <value>34</value>
                  <value>2109737095</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Internet users (per 100 people):qk]</field>
                    <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Business: Mobile phone subscribers:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;China&quot;</value>
                  <value>138</value>
                  <value>4596155000</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Per'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Pop'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Pop - Sep'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0FEE5070-56B2-40EC-AF19-D3878C4F2096}' />
    </window>
    <window class='worksheet' name='Pop'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DF26CA0-4792-464B-BE12-DB389658D18C}' />
    </window>
    <window class='worksheet' name='LE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{336C04A1-DE3B-4DA0-84C2-AF07B8BF6B32}' />
    </window>
    <window class='worksheet' name='Pop - Sep'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Subregion:nk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Population: Ages 15-64 (% of total):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B086B4FD-CC74-4A51-873D-FD09D649A8C4}' />
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Region:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Europe&quot;</bucket>
                </multibucket>
                <axis>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP (current US$):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Region:nk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[sum:Finance: GDP per capita (current US$):qk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9537A9BF-F7F3-4BD1-9B1C-5C344635A2D1}' />
    </window>
    <window class='worksheet' name='Mobile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CE7DAF4-9A7F-4FFE-A0CE-D7EFB991ECEC}' />
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D856429F-C80A-4A1E-9AC8-BB19F62D22C2}' />
    </window>
    <window class='worksheet' name='Per'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[:Measure Names]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[none:Country:nk]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[tyr:Date:ok]</field>
            <field>[federated.0a3qp8r0r77t0w18izxyf1um1kom].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D15DBD3-E688-4E75-9A01-04E82A09ABAC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Rd13nY+zv99jIdGJRBISoJkARYRVFik2RJlixLsuRYbnlxXoqfX7z8
      nJW8JI7ykmX7+cVredlOnOVIlmvURVmNkihRBklRJEEQANF7mcEMptyZ20/f+/1x51zcqShE
      mQHmtxYW5s4595xz7+xv729/VZFSSpZY4g5FvdUPsMQSt5IlAVjijmZJAJa4o1kSgCXuaJYE
      YIk7miUBWOKOZkkAlrijmSEAMnQR1RFEbYJrcRGIwjGk5815XIY24diZq77uEi1In6//7Wf4
      kz/9Uw6eHb2itwivzkuv7L7BD7b40Kf/QhZew3n1B+g9PYSlkNgz/weIEABF1RrnSAlSNF+3
      Epz8DuqGX0Y38kgRgGqgKOC+9AeYD/8W4COrY9CxBikFCIGiXXoMKQJQNBRFuUEfefEzevw1
      CqlN/PovvAMZenzjC3/JQKHGg09/iJETB/ipDzzFs1/9Pht7Y7x6YohS0eaZR7fwhS88Sz3U
      kMXTjI86tPekuOvBpxnev4u1D76H7rRxqz/aTWeGAIBA7dqB8cD7Cb/zaWTlBO4rf4OiqWjr
      fw7F2Ys/NAzOEPo9/wwufhl1429D4ZuEYnPzKsHRLxJOjCGqLtb9TxKc/QnS/2+YOz9EcOEA
      Wk8v7q4/A8tC7X4aPW/j7v8xilJD6XkP1rYnbuLXsLioV8pk82tQFAWnOMSY0sGv/cpP87kv
      fxecOhBy/lw/3WY79z3xQQZf/CKZlfdw745B3vvYvfzJH3ybj/yT3yRRPsY3frSLsDzBA0/e
      eYMfZhUACM89j+seRu15hPDUt9G3/wZ6u4/z4tcwulMYWz6Jlq7hvr4L1aohJSihAyKYvIJE
      yfahhCay/wfQ8Vtoy7dhvfNfoogRpGcjBl5CXfdzGGs34v7w95Hph9BWvx9jmYV7eN9N/AoW
      Hys27+Qrf/Z3vKSNke/oxB4ZYM+e3aQ6eqmc3MPu3W9QdAWgoGrK5P8atcIQJ85fJNHWRU8+
      hd62nfrffpHlT/4y+h264M4qAFrv41gPfwRFNwiO/iWifAFpChQjCUikV0UUTkGiA8KzSKcI
      9SLEJi8QVvEOfB/rsX+BOPVK43ciQDpVMBr7CiWWQY4OgZNHEgMFUJb25FeCluzin/3aL9E/
      NErPyj4+9fMfZqhQ42cfWYv78EaGyy7//J9sJRXTUeMp1n7g48TTKT71yZ+lhsFHPvpxNAVc
      2ya/4i4eumf9rf5ItwxlejCcrJwkKNgYffc0XgdV/L1/i/QV9Ls/gTz/FfyxGmoij7Ht56C8
      H//EmyjxJOrK90DtKGrXDsTZ5xAuEEiMBz6BOPc8wdAQxj3vIxw8hr72AYIDn0fUamibPo6q
      TyDcFFpaJxgewOjbeSu+jzuKyvhFhquwblUPd+gCMFMALkdw9EvQ/jh6Z8+NeqYllrhpXLUA
      LLHE7cSS0r3EHc2sm+AlFja1Wg1VVZuOyiAI8DwPRVGIx+PX7EMRQqAoCp7n4bpu8/fR9aL7
      pVIpVPX2mDtnCMDExARBEMx27g3hdvkibzSZTAbDaNjqVVXFsixs28bzPKSUWJZFPB5H0+Z2
      IkYDePpxIQS1Wo0gCDAMA9/3m8KgquqU86WUhGFIMpm8queXUuI4DkIIDMNAVdV5n/VmMUMA
      YrHYNYVAXCuJROKm3et2QUpJtVolCAJ0XScej6Pr+hUNptZzhBDU63Vc1yUIAoQQOI7TPE9R
      FKSUM8bDNYXITN4rDEMsy0JKiWmaWJbVFLRbwZIKtAgJgoAgCDBNk2QyecWzqJSyOaiDIKBc
      LuPNEbcVXVPTNHzfn3JM02aGwFyO1pVECIGmaWiahud51Ot1LMu6qs9yvZhTADzXwQ9CdMPC
      Mmc/LfBcFMNCu82NyFKE2LZLLBEn9F0EeuM7kRLHttFjMVQZ4niCeMzEseuYsQSa2vhiwsAH
      VSfwHEKpYGjg+Ze+WylCarZDMpHAc2zQTQxVNq4Xt2a10auqetX6frRvEELMOvhbdf1YLEYQ
      BDOun0wmr2nVVhSFdDrdVIFa73crVaE5BeDcsb18+4U3eOqDP0Nv1kBP5jn91iv0bHqEJDU8
      TC7s3kX+HR9k5W2uxVSKBUbHi5TqPmFlglC3uHfHToLKEIdODKLHkqhOiYQeUNLbMZWQQGjs
      3L4ZGXq89sI3yN/9PgqndtOz6i7a4iqDA2eo6Mt5ZFsfh/e/iZZsY2Wnxd5jBe7asIbRc0ep
      +5K1m+6lI2PNeKZEInFNMzEwQ6+fruO3rhJCiOaxVCqFZVl4nkcsFmM6c+0xomOGYSCEaK4A
      0XmmaV7T57gezCkAd929g/XnKmzMOTz76kl0u4h0hvGya5FDB/jhnn7ec+/Km/mst4xUNsPR
      A28RW9aJJteRio9Rr/uI0hgrNu1g6MRuVOlxYbRKV18PpUKRitsYOP2nj9O5rBc7FIROnZHR
      cdbcfw8jFy+y5a6VgMuF/jGynR6lCwKRjTMwMIShWWzuyTNYmaAjM9XpqGlacxadjdZBDDR/
      jja3vu/PMHS06vXRhrX1d4lEAl3Xm+pKtFcwTbO5snie11RtovtGRD8rikKtVsM0TWKx2MLb
      BE9H1Q0Cu4ahW/SuWIZXHefMhQp9yzoQl3vzbcL48DDpruWMl23C8jEqhka6o4rQEpw7/CZS
      0XAcSU93FqEm6OrIY9qSwlgB1/M4ffw44cocfd2rGRofJ7AnqIgUm2IwNlanrSOFlVDBSOIr
      Bq5dIwgrHK5WWb3lvhnPM30GbyXayMbj8ebvIstNoVCY9T2zbWpbf2dZFpqmUS6XEULgum5z
      ZUgkEiSTSVRVxbZtXNdFURSy2Symac76nNEmeCEwwxNs2/ZkvL8kCEN0XcOp11EMa1IvDVER
      oBoYuoKi6qhvQ4gXgxUoDHwc1yMWiyNCD4FGcXSY/LLlCNdBN2MoMsT1AuIxC9uxMWMxLg5e
      pHdFL4gQgYrv2iiagWloCKkg3QqjNUFXLoXrN97rOjaaYaEi8AJBzLKYPoZs254ywCOklNRq
      NVzXJZVKoWkaqqo2B2uhUJii0lwpravJXMdVVSUMw+brRCJBOp2e1eQarR66rmMYxi1dBeYW
      gJvEYhCAhcZ8AlAoFAjDkHQ63dSz6/U6qqpimibFYvGG/31VVSWZTDZ9Ba2b63q9TrlcBhrq
      k67rSClJpVLo+s03Si6ZQW8TIh0/styoqkq1WsUwjKbKEplOW728N4JoowvgOA66rhMEwZTV
      CCAMQ4IgaG6Q3441KNq0K4pyVYK0JACLlGij2/o6mt0jU2ekkmia1tz8WtZMi9KNIFqlKpUK
      QgiklLMKQESlUml6tCO/g2maVywUQgiq1SqWZV2RANh2neEL/UsCsFgRQkzZDCuKgmEYUwaV
      qqpTbP03094uhKBQKExRt+bbf0gpqVQqVCqV5u80TaOjo2PGM89mblVVlVwud9nPJ6VkePAC
      P/j6X/Owtm9JABYr0cCOVAeYOcCmmzpnc2zdSN7uXqNVlYpWkCjoz3GcZjzR5czCrYxeHKT/
      73+HDyQmUJUlFWjREovFqFQqFItFTNMkk8mQSqUYHx8HLq0I0d4AaNrqW5lrdr0aWt9zPQUs
      2tRH148EPZ/PEwTBlL2MaZpks9l51Z96vc65Az9mTWyiabmc0wp0es8PUNc/xfm9L/DIY+9G
      hgHf+f73eOqJp0glYpRKFdK5LAQedU+QSsavKa1uMViBasVhdr1xlPc//Q4O7z9AxQu4Z/sO
      sMd4c/8xEu3LSIYlRsdLrFi9lqHxcRTV5OH77ubk4X1UHEE8287I+WPkl60jSZ3R8SIdfXez
      bnmava/tBunT0bee08fOs2bTBnqzOs899wLv+uDPML1aSaVSIQzDpsMqIpvNUq/X8X2/GSDn
      eV5T/5/O5cybV0q074gC6G400Z5m+rNHatBs+5yB/vMc/8p/ZEu6TFy/tFLOKS6+W0cNoV6r
      seu7X0ak11GZGOXl579DbkUfTq2KMDJcOLYbJZbh4x//JDHj9gxtTmQ6WdEzAmgsW7mCoH8Q
      XVMoTVykb9sjXDy5m7qW5h33r+KF/SU0WcNKGg1HoZRUa1Vi2Q48x8YPBKGus33n3bx1YJR1
      y1KIMKDmh4SHTxBkklSKE+zafYBKtUyhXCfdPnWSCMMQ27ZnPGepVGr+HA3KyDs7nSh6dDbB
      uBquxa/wdmnd50QoitKMccpkMjOccOlMluSyjWi116e8T/v0pz/96dZfRHqjrgpeevFl9FQn
      HW0Zdj74EGODZ3CkRXtSY7QckM2laWtvp7stQ8/ylejX4BG7Ut3tVlIrjnL0xCmMuMlrL7wM
      yTSm9NASGc4eO4yV7iImKpwaKLN6ZQe266FqJoFTQwQOAhU9EcdUdKqOQ19vJyePn6Vn1TIK
      Y0XsWhVDV+les5pqqQ4obNu+DUuVdPSuJD5tYnEc57I5G9FqEA2W2UKaZxtIV0vrdRdCbkfk
      qW6NVVIUhVgsRuddD7D30Al0p0BichWYxxEmEUKiKOolT6SURCdLQL0Oy91iUIFmo1Iqkcxk
      GxXyFBWQU0x9iiIpl+tkMynE5O+lENDiFBKBhxMqJGMmUoKqKs1ElPlUiYmJiSkrQOu5uq43
      43Oq1eqs778eOnt0jVaLzK2O62klHo/jeR75fB5d1xFCcPzIAaqVKnt+/Dw7rRPclbaXPMGL
      kYmJCer1OjD7wJtub2+lVV9/O3r79ESZhSAAUaZZ6+Y4FouRTCR4/bt/R3LgBepKmnoAG2Jj
      5MxgyQq0mGkNMZie6TUbrYN2evTn9OuWy+WmFSnKD4j2EnNlid1qAdA0jUwmQ71ep1arEYvF
      yGQyiDCkXPdYY9ok9Rq+VNCUxvMvCcAiZraV+moH4VyRoLFYrKmOzXfufNe6WQKhaRrxeLwZ
      lZpMJpv+AUVR0A2Dd/zUJzj0wxDhu5Q9hS3Oq+RNb0kFWoy0qkARkUrT6h1unZWjWfvt/m2n
      V4iY7fhsntobLQyGYdDe3j7lPufOnePc8be4/5EnSKVSSClxXZcD+94gvfdPWBb3llaA24XL
      bWyvx+Cf7V7zHbueK8LlfBZRnnSrVXH58uV41QnOnjzK3ffu5OSJYxz+5h/zQHaYZLyhJs5p
      t3JrJfoHBvHDeT6s8CkUJq7l8ywyZHPGLU+MMjYxGa8iJRcH+ql7AZ5dYWBotBFrcuE8Nbdh
      pgycKmfOnKVccyhcHKBYcymPj3DmzBkKxSrIkIsX+jlz9hx116f/7Fm8UBD6DmfOniOY5/uf
      i2hDOn22VlX1bZsqr1WIrsXyFKkwUf7zbBiGQVtbG52dnTO8wIZhsH7LdrZu30EQBFx47Vke
      zV0k2eIIm/PbOLt/F/tPnOcr3/w+hbECtUqZcrnI2dOnGRq8wN69+yjViux+48AVfZjFTHVi
      hBd+/Bpgc/DgWQZOHqDsCkojZxmrBRw6eIi9ew+iT5xiz8FjDDtw6MBBJDB08hgimUH1xzhz
      0eX4oX2oZhxDVDk/XAIUkqk0pQtnOHDgAEoyyd69hziwf1/DzMqVD7jWqgut/1qtPgshE+tK
      nqGtrY2Ojg4MwyCXy83qs0in07S3t88aNTrdOx0GATXbxRPTLGZzPYAIA86fOkGucxm7X3mV
      c6eOcvzwPl4/eIHQLnHm+H7ePDRwNZ970ZLKd7N6WQcIhcAtM14P0RXw7Ar5ZashtIlpAcdH
      KoRVl97l3WgiQABmKsXAkQP0Fxz80iCjpSqGlaRYcdm4dhkoKsmERZBoZ+OKds6fOkPFrjE6
      epEzhw8yVJzdlt/K9CJTYRhOGfxw/fYAb4crvXc6nW56cnO5HK7r4vs+hmE0UzAzmUyzjMps
      K0oYhhw7eqT5+syJw9SsHg6MJ3hr/NJqMucewEpkePKZRzh59AS6X+bgcYdNd61ky9Y1jPbv
      wcx3kDQMtPjM6gC3G9WJEQYGBsjm0wjVxNB1CsMXMK0cZw+8hpnM4tkTpOMx4rkkh/ftw4yn
      GervR1c1knGLUJp0dmdRq6AFE4hYF3HNp3+gRDycoHv1OlKWSyo+TqajA8oKjndl6kJrFbfp
      lhu4FEkZ/QzXLw7oWtF1vRnToygKpmk2E/Gjci9SSmzbxrbtpkPrSjfWuq6zcdOljkWZbJ5H
      3vUMtYl7GTq4C99/DSmvMCUy8mBOtSg0PJdvl8VmBZJCIFEoTYyTaWtHEeFkr7SG51zTVEQY
      oqgwPl6mvS1HKASa1siZVdVLM3Xg1qn6kEs1voMokUVVNRQk4eT1pjOXFSiKh5nLdHk1Js3L
      cS0CFD1jLBYjl8vNON6awAPg+z6FQqE561+PfAYpJS889/dY0qb/7MklM+hiZD4BuJlqzmwC
      NZ+QRTN9W1vbvJvxKMo1qkIRj8fJZrPXNPgbk87MKhpSSs6cOr5kBl3sTB9Is1l/Ilo3w9fC
      bAOwNaRirmMRuq6Tz+cva4mKojojj/bbKdZcLpexLGvGRDs0cI43v/0XMwXAtu2bWh16trDe
      JWbSWh0aphaaaiUqmDtdCKarQq0WkmigtQ7Y1tqdEZHOHl1vvmtHP0fPoWkauVzuiqrZBUEw
      xeoTDd5rCbfI5/NTni8IAl743jc5/tYb3PeO980UgLa2tqu6wRK3BillUyeOnEBCiGb1tkQi
      0azV06o7Tx+4kXowXXWaHk8UlVWJNqqzDf7pr1t/jsIUrsQf0HrvKN3xeqxcQ4ODfOtrX2DV
      +k3c8+gz3LfjgaUWSYuRiYkJXNfFcRx832+WLYxmXNu2qdVqzcyoqG9A6+wd/RwJwGx2dsMw
      mmVLkskkQRDg+/4MYfE8j5HhIRQp6V7ei67PzPFQlEZxXN/3GwFqk0VyZxMC3/cZGxsDoKOj
      44pLv8+GlBK7Xuell16iq7ubjRs3EovFmmrY0h5gEdJq8ozFYjNUHsuyphScdV2XeDzenIFb
      1Z5WYWi9vpSyqQqbptlMNIkGTuv9ju97hW3JIRRF5djuGH0PfKAZSRohpaRcLjevbRjGnMlQ
      UUW7ZDI57+CfTSWSspEDPTExQSIRp//8eVAUHnzooVmrRiwJwCIlqvsThQjMF3djGEYzPHi2
      YLXWwRypU6qqout6M7Mq2qtNH3RSSizFpy1poKoK9xoub509zfoNm2Z9LqCZoDIXUUJ/IpGY
      d+affszzPPa8sRtV1VA1jTVr1rBp85Z5N91LArAIibqtXGlcTxQD5LouYRhOCR3wfR/f95sm
      yiAImpvOqG0SMEUPbw0zGBm+yNpYAVVtzOYxU4Wx86jqljmNKclkcs5CvdHny+VyVx23pOs6
      Dz38yFW9b0kAFiGRenClRM6naNDatk3/ubO0d3SSTKVIpVLNyhGtKkcymWy+p1arNVUvVVVR
      FYX9L3+L3qRPV8elYaQqCr1GgcOvPc/KzQ8RnxSm6Vlq85lP56t+fbnv5WpZ2gQvQorF4jXV
      94wsR/1nT2EMvATZVZhdG8h1Lp/XyjI9sAxgZHgYZeAV8ukYOYqY+qW9QXT+jy8YLFuzlZHC
      BOvufgBomDQzmQy+78/aZONmc+vT+Je4YUTVl6MwYdu2ef0bf45/9mU2dltsig9TO/HijGYY
      04lm/tZZuau7G7t9O0cKOv0TM1UdRVF4bEXAOn8/QkymH+o62Wy2ufFeCHPvkgq0CIksMvMV
      uo1UjkgPL4yNcfrwGzzUFyOXuGR9kcCFgQF6enpIZzIzrETTqVTK2HWbif5DrFQusK3TQFFm
      t+YU6wGHh0Pat/ahKMqUcIZo9p9tdbmZzFCBpDOCqPlo7b1I6eAf/iHGlg8QnvoGoiow7vkZ
      lGnOPFntJ7hwuHHB3Hr07nXX9DAydJB2HTW15Iybj1KphOd5zfqYs83Q0zl+aD+b5AGy8alm
      RSGh7oUMVhScrgfoW79pzmtIKTn4k+dZpV2gN2dctizO6wOSZTs+iGU1gt8iq47jONTrddLp
      dHNPcSsGP8yyAsjyYfzTJbT2XsBAza8AexT/8HMYD/82SJdw9DSY7WjZLgDEyKuIagq9bwOK
      lUdUh1DiXeAWwMwha2NIt4iSXo0aTyDK55GOh9q+DlSJLJxEqkkU7wzuoT1YOz6Bksogxs+D
      lkRtW4Wsj0JQRwYStW01BDXE+DmUZA/IADXdjbTHQM+iLIJiW2+HKEw4KiUerQiRSbS1hVFk
      7TEMAz2cOdBUBdIxnY0xODS8h2O1MqqmoVsJupatJJlK4bou4+MF3FqJdsZYmZ+/qZ2Ukosl
      n5pIkc3mmrE4kcPNtu1mL4Nb3SdsfhVISvyDX0W972NIu4IYP4sc/CFSX40c+yrc/6/QMikA
      RLkfMaqgtm2G8uv4RYmsDGC98+dxnv9DjM2PEOz9BtYDH8Tb/yO07g6Ci+fR9H6CioWW60Zh
      BFkZJCz0o5EhHDuLvPgy6pZfRxz6E5T2+wjP/wTz3f+WYO//QOnYgWI7hEe+jPnM7+K/8efo
      9/+faHeAAGiaRq1Wa8bOR+bMaGWICsUGQcDIhTOoo/tJLZu6dE8feFs6wfWPIST4dcngvt2c
      kTkSVOmJucQNlWzHzCEjJARCYmoKZTvgjQuCZO89PPqBd8zoEiOEIJlMTulgcyu5oj2A0rEN
      Nb8aY8OTuM9/BWIO2BVEZawpAEqiAzW7DCWWRGn/IOLrv4J2/38CTUVtvwdj68cQo/+ZcOhN
      RHUMNBepOlA/h/n0p1FVkOUjqIUAY92DiIs/QZYuACGyOgFGO8bdHwG7H+mMImUb1tb3A6D6
      RwhOvIwM0qh3QHi1pmlYltUsFx6Px4nH49i2TaVSaXaCuXBsD0p9lHs6AzLLL/+nVhSFmHlJ
      SLIJgOrkZnX2WT8UkuP1diq1Oj1mjWHrLrY+cR/5fH5WR5aUjT5mV1LL/2Yw67cixt7CP2qh
      rXx0xjEtvxaZ3YGWegTS2ebvZX0EUYqhKEmUid2oqz9MePIbGKt+CVkZIBx4GeFoGB13EYzU
      MDY/gfQEcriEf/RFtFweLZNAls4SFgYIz+5CXf4hZP8saZdGFvwhgoEDKGYKdc0HcL/4i+gP
      /38L4ku90USbxqg3gG3bzdm+ra0N13UpFYt0hf3ctdJCUa7c1nE1lRxqrmB/pYONO5/kwusv
      07f9/WxOJAnDcFbVRspGPdLrUZP0ejGjOC56CtWKoWgmSmYlWtsqlGQHamY5SrITtWc7VM8i
      QwWtYy2KqqKYeRQNFM1AibeBnkRf+2609i5QFcKTb6DkejG2fRw1twY1oSGKF1Hb1qP1vRPq
      50DGUDs2oSYtpBugr3kUMXEKbfkjaO0rUdtWoiTaUVPdqOll6CvvQxROoCR6UJJdiIuHMe79
      KMosGVS3G/V6nUqlMiWUIaoMHQlHJptl/4kLrM36zY71syGF4NT5i0hNJwgllqFRrtmYhsF8
      c4miKGiqwli5TrFSJ5XrZN1dm9A0jWKxiKZpzbzeVrNnuVwmnU7fkoZ4s3HDHWFSlvAP78Pc
      +q4bdQeCI19Cxjajr9l2TT0KFhvFYhHHcahWq5im2YwIBZqe3t0v/ZhN6U6q9WPkEjVihsqq
      jpnq4cGDJ8mt6EVzK+w/Oc7qVV0kdEFCh4GxGt3LOrDLVVQzRl93pvm+ZlpnKNg/atJx91Os
      W78BIQSjo6MYhkE+nwcaMTrnzp1rBtP19fVdlSf7RnLDxVBRsjdw8AMo6Js/cQOvv/CIzJ6a
      phGGYVPXjuz3UkrWbtpIrhSwsuNxxitljg2+yaqOqdeRUjLhwaZMjHrFpXd5B+ViiYuuTS6V
      YO2qHEdPldB0j8ODF+nr3jbjWSqOIN23k3XrNzR/Z5om8Xi8mdklpaStrQ3DMIjFYlMiVW81
      t7++cBvSKgBR4ks0I9u23dwb1FyHmGFh+y69+UvRnK3x/Ou64vzozRMMlFzScYtMMkY2lSCV
      iGGZBnE1ZKIekEnO7nTLJ3XcgT3NzDFFaZQyMQyDarWKruvE43EymQyZTAbLshbUPm1hKGJL
      XDXNoLSWhBbHcZqb4+Uretl7rp8VYSeFyjjLM+qsoQfLepfTvXzSEwtAasrxe7Ym2DpH3H1E
      UBvnjddf5dHHHm/q/FFg2ny1exYCMwSgOD5KGN68nOCbgrpwltxrpTUnOJrBVVVtFozyPK8Z
      sqwoCqVikdXxHLqmcW/fZg71h4z5BTa0BWRiU/0BqqIgpMQLBKauzdj8Xs7jm7I09pw8xiPv
      eOeUwZ5Opxf04IdZBCCbjgMC36lR8aAtE2dkpEBHR0ezDtDJM2dYv2bNzX7Wa0YxMpc/6UYi
      Jb47jh8qxGNJ7FoBK9mNpmlI4ePURtHMHKYVJ3ArqGaa0B3HDwTx5Mw+uRGqqmLbdnPWjzK+
      XNdl9PAp7uvpA8DUDXQzR3LTdk6MXUAfPMC6tkbnn7onMDU4OmQyWoa+jipbVySvatAuy5ks
      tzpnepkXQMukyzHnE57f+31+7zPfxJ84zb/6nT9idGyE7z/3fc5cLPLanr241QLPfed5xqre
      XJdYYhIRlBm/eAykoDj0OlKRFIbeahzzywShoDC0BxlUGHjrazjCxa2XcEsnqddrc17XMIxm
      tGdUbeHk0eOM7jnMtq5VzdlXURTu7u1Dnh5GlCUT8S28XFrNZ39c5UdDHfzwaIJ7+t7Fip6N
      nAjXcGrEmfOeMz6blOwb1njwnU+/vS/pFjGnACiaTndM4YU3zvLgg3fh2jUq5VGe/ftdADz/
      ta8yVi/x7Ld23bSHXayE3hCeJyhd3I9qZXBqEzj1UQBUM0tQO088s5bChX1ku+5CCtA1gS9N
      YvGZ5sJWT3Bkb48sK7mONizNQJ8MM2iqS4rK+q7l3N+1mnsT3fSRJpdtp11aPLx+O7bn4nel
      2XL3VnTtymf/wQmP7PqHF22Bs3nXqAcfXMs/7LlAd0LjxFv7cWIpkkZjpmnvaCeUFjvu3XhT
      HnQxo1k96JqHSoAW70JTAhKZ1dilAWqjr1KqVBBBjVi6C6dyAac2yOCplxvlEdXBGosAACAA
      SURBVMOZbUxVVSWRSJDL5Vi2bBnZbJZMJkPgB5w7dIxDZ08ipaBm1xGTSeK7D+zn4tgIUoSY
      usHa7uWsXbOWlTvv5idnjrB74BTLV/TSf+Y4obwkAH4oCMXsrqJzBZeh9A42br77mhJ0FgIz
      w6H9KiAQYYBUVMIgRFVBAeqO15h5FNBUhUq1RjyRxNAvX+zoVrIQ9gAidBEoaKpKEHjoRgIp
      QxQkQoSAiqabSBGCoiDChmqpajPNhqVSqVlmpPWY53l88XN/Qx6L8YuDrOjuIZ1OMlGVeG4d
      Sw/ZuKyb1996g/Z73ottn+Oedz7Mi/+wiw0bN7Ji1UqCIODNl77LltQ4F9w0erqbaqXEtsw4
      qZhGEEpePefSvnwN7avvZt3Grbiu2zS9LhZGR0cb+QlzCcDtxC0XgOtM1MBueryNlJLhoYt8
      80tfRhXwZN8GhioTCLJUquMo0sVQJHmtxg/kCj70xFY2bNjA2NgYnuc144mq1QrHjxxi3YbN
      WJZFPBajND7KgTdfZc2Gu1m/aeuUAmqz1QVd6DiOw8jI8JIA3AwaengjAExRNETgoOqTg1dK
      wsBB0WOoioKUAlCQwkeioGkzQ7trtdq8JUMc12HP87vYnl+OBIrlMroZw9JVfM/hzfFBHnjm
      KTracs3nKxaLzVLkUQWJZDJJtVqlr6+PcqnIm9/9aza/62P0rZma8LQYBQAmK+PNdbBw7hB/
      /b++yuuHz17Rxb73wo+u13PddsiwRmn4IANHvoNTO095/DSjF/YB4JQOURg5ycj5V5HSZ/DA
      F3FEjZGzr1AY+DG2M9Mic7kMqpgVw0wlUVQNQzfobGsnl0yAojCgBzz9sx9qDn5oDNxWh1Vk
      WfJ9vxncls3l2fruj7Nsee+M+zmOQ6VSuQ7f1M1FUZS5PcGli6dZ/+BT3N8X5wuf+59UjU7u
      vyvPW0f7sQMFoVl86NH1fPv5V9j02E8zNj7B3pe+x48PDPD0hz7KphUz67/fqah6imzHWgKh
      EEssQ/pnkGoje0tRTXynH0VLU774Bnq8izAIEMIm9EBVr02vTne2YY85pGIJpJQMlcYZjUl2
      Pv7orLq6qqrNritjY2NNgfA8j1qthq7rrFy9hrGxMTIZZUo+su/7i8LmPxtzPrUE6rUabm2E
      w6fKdHXmGC9WePjRh2hfvY60qLPnraOsuGsZJw+dBWDf/sP0rl5B6C9Oi8CNQzJx8RBty7dT
      7P8hhbHzgKRePIfvVtHNDFI4mMleVGkTOAWkEkPXDMLg2r7LNevXca401lRPRp0qDz7+jlkH
      f1RDP5lMNkOYIzXI8zxc120m2nR2ds5Ixo/eE9URXUzMuQL0bHiANquTZELjU594F+eLcM+G
      TSSSaTK5DsINvcT1gANnR3nvlnUoqkfGfIif7DlKPrswQl0XDgrtKx8BIL/6p8hPObaahPBR
      lEb8fTyzCoBspg8plWueWS3LQmnP4IcBhqajzmOpe+211+jr62P58uVYltUsX+J5XrMzC8zd
      VSaq5RkJwFw1PxciS5vgRYht23O2DW1lbHSUsd2HWZHr4KAzxsNPzh6Wfv7cOXpXrGiEZkjJ
      +Pg4bW1teJ7H+Pg4juPQ3t5OKpWa0Wss+j9Kzo+q0C0WFqfitsQV0d7RQT2hc2ikn5Ub1s1Z
      q7Ozq2vKsWjGN02Tjo4Oli9f3ixhEhGGYTPTK9o4A83y6YuFeRo1hXz7f32WN8+Wb+Lj3J6I
      oML4hTcYPPECnjvB8NkXCScX2dAdZbT/FcZHT1MrHGS0/yXqts3E4KuM9r9OEF77aqwoClsf
      2cnmJx4hncngzGJRgkbFttOnT095HfUg03V91hh+XdenNOmIKktfrsrcQmPOPYBfH6eiZ5nY
      /SrjR3zu3b6RVw4MUhq5APE8mzMhrw/Wefjetbz1+m62Pv4eDr78Irbn8vhjD7N7/xGWrd3C
      +94xM4voTkPV0+SXbWN0YB+6FieWyCAkaIA9cYJk10NUh18hxKRj5U7Gzu1CGutJJ33seol0
      On/Ze8yFZVlYljVv2yvDMFi/fj2e56EoColEgvPnz5PP58lkZqqPUcRpqVQinU43G3Akk8kF
      l/ByOeZcAfoPvM6R8xMcPHqEFTmLLz33KrlkSP9oBd0LKFarPP2hD1O80E/KEhw8cAB6NtId
      h+OH9+MoMXz7yqMKb3ec8UPE2rag6jFUJdKjG+1nkeLSaymQig4yRDJ5/DrQWiN0ruNCCCYm
      JvB9n1wuN+uKERXlOnPmDLVabUrDjKiNUnTeYmBOAajpPfzr3/w1fun976Rn232kYxl27nyQ
      7Ws6yXS0s2r9JjpTBpl0injbSu67fydd4TCnLpbZ9si7yeshHV3tN/OzLGAkgZolnUrhVk5T
      KZ6nNHoMuzRALL+J2sirmKk1pDI5Rvv3kel5J6ZWpFZ3SSSyl7/8dUBRGrb9TCZDsVhsVH1o
      aZIX1fOZmJhgdHR0SkRqdDz6F3WpXwzMsAKFXrnRGPtq8ev86KWfoKd7eOyBrQunOoOioOip
      y5+3wJme93slVqBrQQhBtVqlUqlgGAa5XA7TNAnDkNOnTzfrkUah2Ol0mnw+39wMR+UaW/sM
      TP9/ITFDAFr7sy6xcEilUlPKnN8oAYhm8EKhQBAEZLPZZlO5YrFIsVgELoVPRAPeNM1mfJIQ
      Ak3T8H2fYrFIJpNB13XCMGxmri0UZiiFs216lrhziHT5TCbD+Ph4s7FdpB5FpVg8zyObbahn
      kemztQ2q53nNjXG9XkdK2Vw9AHK53JRo1ltVJn2pKsQSM4gGfFtbG5VKZUrKZTqdBqZ2nW9t
      1BftHaLzE4kElmXhOE5TcKLq1YZh0N7e3qxq0do15mYJwVKLpEXIjVSBWolm5WgGN02zGerQ
      2mB7NlqPRc26fd9ndHR0yvNHFeSi5n1RTFHkX7jRgrC0AiwxJ9EAjJpkRx1nIl2+dZC3dqSx
      LGtK0F2r+TVqlm1ZFul0mmq1iud5U0o7RibZVpXoRgnC0gqwCLlZK8DliFaIIAgwDAPbtmcU
      xYWp6kxUITraawghqNVqc2a4RZGqN2rjvCQAi5B6vT5vf7CFgud5TYtQFDEKDZUoWiluNTPE
      auzsQb747V1IYOT0Ab7+/E9olZBa4Swv/KRR0wYR8r3nn8cZOck3frR3xsX9+gRf/KvP8Bd/
      82VKbmtN+IBvfuu5K37IAz/5HhfKJb71zaUSLNDQm6OO7gv5X9RtPjKNRr+PYohu9fMFQTBz
      DzB2/iz73zjE4+9+jNdeP8j5YhX34bt49tmvk1qxncc2JXj1H77P2eMH+cjHP9ZwgrgVBkbG
      GTt/hO+9uIetDz3JvXct5+gr3yW5+Sk+tCmLEDX2HRhmfW+cc4WQ00f28ndjQ2x+9L2ssEp8
      6/lXuPed76MvWefvv7uLne9+L0G1wMhYiTUdbSRiPvtf2cXI6Bme+fDHUAon+IfXDvHAEz+F
      P3aewCuS7tnAG7ueJ9G7mQ88+dBtG+q6mOLtFzqzjpFt29axf+9BAjNFXFF48Tvf4J5nfo7Y
      2CGOXaywYuP9/PQjq/jW86/z0ssvN1eIb3z9W2zadjfPP/cdADY9/AwDP3mWP/urr+A5JV57
      8zDVsXPsPdyPmWzn5/7RJ9n13N+ze9c/0LH+btYsb+Prf/8cP/uL/5gNXXG+/tWv0bfpHg6/
      /jLjLuR77+KTH3yUb377uzz79R+wfftmnvv2d9n70nMM+lmMiWNcdBLcs+naulQucecxqwB0
      rtrC6de+Tm7FFgA0XcOxbbwgRFUblQsmJorEplUDU5EEWDz9xGMAlCt1PvwLv8q2do+jg1Vc
      x2G8UCAEJBKnWkJqFg++58NszAd87vPfRFOhVq/huB4r79rOxhWX4omkEJSLExjxBAoSaaR4
      6vGHwMzzrkfvp231dj781L187W8/R3mpYuMSV8CMFkmqbpDtWEZHKs6W7feQTca4/8GdHHzt
      FZIrt3L/pjWUhs8xbCd435MPkkrEWb68l0Qqx4P3bebwocMY6XZWLeskqBf58Ss/Qe3YwGM7
      7sYfP8tEEGfzpo30ZjX2HT7F48+8j7B0gUOnLvLgo4+x8551vPbKq8Tbe1nW1UZXZzuGadHe
      vRzKI5wcdXjfM0+yaW03Bw8eI9new+oVPXR2dxNUx3njzQP03b2TDSu7r1cg5RK3MUtWoCXu
      aG7XfeISS1wRSwKwSJFSUq9VsV2PG7uES3zXoVKtIYRESoHneXjepdzfMAjwPA8/WDjtT6+U
      pVCIxYiUPP/lz7D7TJF8vodf+se/SFKbvzxhq1f2xO7nKebv44H1HbOe28qx3T/gS9/bTSoV
      Z8WGh/jpe9P8mz99lvVdcZT8Xfzapz7Mi1/6LPvGBbJS4KH3f4rHt/ddt496o1mUAhCEIY7v
      o2saVkvixZ2CO3aMF08LPv2v/y90VcG3x/nMf/9LKl7IEx/5JYyLbxCufCe94gx7B02Wc54X
      9p2iPDbGBz71v/H9L3ye8/orlD/6c1A4Sui7TCgZFBnj4z/9br72hS/x/k98gris8fmvvsRv
      /Mf/QFvcaIQ0n99NYvkWfv3XP8rX//z32XXoASrjFR57/y9xd6bIH//lj3h8+6/e6q/oillU
      AiCkZKRUYrxSaS77cdOkt60N6w5yDo1fvEDXyjXoky2rDux6js6dH+BXtrfx+3/6BR5fpxLk
      H6ItHKN/MIalDbHjqY/SM/4KPz4xwhNPPMbwsvfw1I4V/I/f/xztOz/Bx9+9lT/8vT9g7LGN
      nLhYI6YoUC1QyywjQ43P/PGfMaL18ZsfjHwsCpu3buK1gWFSeLz43W/yWrmf9Ts/fOu+mGtg
      Ue0BRkslCi2DH8D2PM6NjRHeQVls7SvWMnTiAE4gEGFIGAp0XUNRNZisQo2cDFYDUJTG8ZaV
      UkyWW7GyXbz70ftR9RjPPLye//7Hf862x59pmJBTnWTK5xl2Y3zy5z9GWL1UIkcKn1df38+6
      dSsAjY3b7ueX/8Vv87Gn7r1p38P1YNGsAEEYMl6tznrMDwJK9TptqcWf+3slmPk+Pvr4Wv7g
      d3+XVFsvv/yP3scrn/0r/uQfFN71U59gNWf43LOf5WACVt37PjJaB6alY6XydJBk/fKdfOdz
      f0dO/1m6updhTK4kWx5+kv/2hVf4rXtXNm6kJvjlX/ww//OPfg9L11h197tQrRQTx17m3//O
      W9z3zvfy8F2dvPjWCjrX9JHLLL6SmIvGD1BzXc6OjMx5PJdM0tvStOFOQIhG2RRVURAiJAwl
      hqEDkjAU85ZRj5LYm8dDjx9+5yuc97r51Y8+NeVcKQQC0BZQLu/1YtGsAJfrVRv1uo3+sOoc
      SRRSSEA2qkUs8s1za4y8qmpceqlctl3RjPh6RePuB57k8c7uGecqqsriaX50dSyaFUBIyamL
      F/HmqHDWnkoRipBgMtkiZprkkymMyRJ+Ugj8uk3oBYBEUVX0mIUeW1yVzJa4viwaAQCo2HUG
      CgWElNBSecjUNYxZZjxdVenJt6FKcErlydl/2jkxCzM1d7uhJW5vbpoASCFw7TqB76OoCqYV
      QzevfPYNfRu3NkIYerihwoRvomgmmXgc23Xm9IamY3ESAoQ/d21MK5NCt8xr+FRLXAuu6y6I
      bDC4SXsAEYZUiwXCFvXFs+tYiSTxVOayQiBFiF25AFKgADFNsjJhEUt1U3dd6u7cNUht1yV2
      GQ02cNwlAbiJVKvVBSMAN3xbL6XErlamDP4It14j8C8fuB8GTrOAbIQIokE//wJ2JQucfBsl
      yJdY3NyUFcCfZ4b2XQfDtBoOnSBAURU0veHVLVTGKNslsrEU0+cLRW2UztA1DYW5xcAyDAjm
      FwLlNjTvLXFl3BQBkPPM0lIIyhMFqqUJxKQFx7BipPJtjFcLCCkYr5dYmc4SuJc8kT4GA8PD
      CCmJG8Zkf92paKpKLp0irNQR80QqatadE0axxFRuigDohkngzd7tsF6r4tr15mspJZ5jMzE8
      hBHT8aSPpppUwhhSgYShErOSTNg+XtDoTRtoGm2pFBW7TigEigRDKsQUHa9sT9bgnz1aUjMN
      9NjC0EeXuPnccAFQFIV4Kk11wpuhjyuqijtHeIMUgoyahlSCiu1Sc11AwQmhjRr4NtEWJm6a
      ZOIx0vE4ruPilGoNnUiEeP6lmd/Q1Sll2/V4DDMRXzKB3sHctBUglW/HrpQJJpsqG7F4QzUq
      l+Z8n+c6SGPq7CykpOYJNFViaC66ZhC34EKpn4yVQ5bFnBsCP5SNIC8lwHFqpM02LDUx+8kL
      mGq1iusu3l7MtVrtVj9Ck5tjBg1CnEKFoO426j3GNMy0hR9c3gI0mxXHDgWO31CbvMBjpFTH
      NE3sah1TzGPOlBLdNHDcOmHg49SrpLKLr6N9KpUitcgD/9rbF0b3oBtvBhWC8oURvGq90XlG
      SgLbpXxhFFXR5lU/4okkCWtmz1k/rE95LYQkF28jrlx+Ng+DkGxbJ4l0hmxb59V/oCVuK264
      ADil6uxeWCnxyjUy+dnT8jTdIJVrI5dMkozF0DUNU9fpSGcwZmn2Zmpmc6M7H1JKnFoFRUqc
      evVSw2chEGGwaJq7LXF9uOEqUOj6cx4LHI9UWyd21cb3bUCgKCpWPE62rRNdN/CCgLFyha5s
      thHvrygEIsdFz25ex9ItYmYcYQjCyyRmKwpNp1zgewgRQuDhVkZBCvRYGiPVvrQxvkO48VYg
      de6BpCgKxeFxRACGliTf04aqa6jqpebLwp0gG48RNxu2euHWSCoq3Ykc43YNVar0ZJeBkGj6
      5QetYZmEQYgIfKSq49TrqF4JRENwAruMFkujGUum0TuBGyoAUkrUeXrTmqkEfr3hJZZCUp2o
      kW7PoGhKdAFAIafVkPUyfpjFHx9EigA93onqqEghGRkapr29jdB3sRIJ3PocHdENDdWzUXy/
      ce3Qh9BHakuhEHcqN1QAhB9gj5dQDX3GPkAxDaSmYZhGI+FC11BVBXVyxbA9HyVwUJCIsGHy
      850SqFrDWRbSDG8Ow5BqtYamqeiWJJFN4tQcRNiY1VVVxYyZUK8gwxYVSUoIgFAFQyIRCN1C
      qrdr+scS07mhAqAaOno2gR63MDSDarGIpmiEoUQqCq7dGNiq2pjJQxFSr9QxdI3QD1A8ByN5
      6RFDDCZI44kAq0WeJA2nmhASt2ajhwrxTAIRhKiGgZmI4ReLBOEc+wOpoOlpLvpFbLuE6dus
      6uhD1xZNwtzCQEoqpQIVT6GnI8P5cwN093QzPDSEUA1WrFiBqS+suKsb9heu1+s4to0gJHBs
      PM0nlk3jVl2kmHuj6tVdvFBgapKgNIFmdBBIDcOMU66b1JzJzuWo5NIZbNvGDlUm7EaqYyah
      05Yy0UyTil/Ftz3aTZ3QmTsgDyBwHGzZEEgv8HB9d0kArhIpBZ7QcUcHOVEpsKynh3P9I+Ti
      EJhZDG3hGRau6S8shODNN9/ki1/8IqePHMOvNGz8qq5jZlNs23Ef73r8cVb09pLL50klEowW
      CqhSnTcorYmmoiVj6OkEjl/CdSoEgUcgLplMpYRcWxuV4XGECJom0GLNQdFUDEUyPBlmUXZd
      eqWc1+arSEiYCepeHU3VqAdV8CRJc3E7nK4/krHBc4w5OhvXrJhSgVtRVbxqAZFpw/AqJONp
      RDiAridhMmMvarbn+3NbB28mVy0AR48e5f/9L79LtxLjU0/9FOue+SS6rk9WJhC4gc++E0f5
      uz/6M4JcnH/3m79JrK2NzmyWev3KP7RdszFiCpYRJ9BMDCNFzojjuAFCStLJGK4X4HozfQzl
      qo0ZXtLjAyEINQ11ntpBiq6zomMZfuBRqI9S92rYXh0z21DflmggQ58f/Xg3KUWjvbebzpZI
      Whm4nBsYJJ7Ms7w7z5Gjh8l1rMDQHNTJukS6rjdCYRZIIbMrTomUUvLss8/y7F/8Db/zC/87
      q3uWz2srF0Kw98QRfvcLn+X//re/zb07H6DuXF3xVAsfRQqUdIqJwggSSOU70UwLXYG6F3Cx
      UJn5oRTobE8zUi4hpSRhWfTG4wSl2eOOpISyoiHMGN1tGYYrw/jCQVNVumJ5TCvVKDq1BDL0
      +Mrn/4py2UfPL+dDH/kA+djsg1lOWvGmD5NCobD4QiGeffZZXvzSN/jjf/lv6FvWe1lHkaqq
      7Ni4lT/7jX/HH/7XP+LI6TNX/3SK0ogYdexG31ghCF0b6daxyxNIpzZrEwzT0DE0g1wizbJ8
      nkxSo6zYiDni/oVpMuEJSlWbs0MFykWIa1k6YnnCSoHQrc/6voXA+MhFqs6lmCq/XsEJb5w3
      W1ENtmzYQCKfJ9/RTsqcW4lo1B26YY9yXbgiATh69Chf++xf8x9/+Z+Til9d9GRXvp3/+k9/
      i//n3/8HSvNEfs5AATOXQ8/liaezqJMzsJSimVugKpL2adXINFWlM5+m7vpIqeAFDlW3RM2r
      UrVCzHwe1bKQiopqxdAzWbREkqSqktRUNClRUEjoMZR6qWGitRZoxKgUjAwPMjwyTmF4kPMD
      Q7j1Cq7rcL6/n8GR8et/y9DjYH+BD//Mz9DuTnChbF/+TQuYywqAlJLf+8//hU//4tUP/ojl
      HV3806c/zGf+4rNXHGujKgperY5XrSNcn7jeuLddq+K6DqCgSI2YhM64RS4Ro6stw5reDtKJ
      GDFdxQCMFs1FSonthoRGHF+L4akGE+MVyqNFLCGwwpB4EJA3NIRTJagVCO0SMgxmzTi71XjV
      MQrVkKHBAfzAw63b1IrjFOs2tuvT33/u+t9U0WizJD/8wQ8YqglS1uK2lF1WAPbs2cMyNcGq
      7mVv60ZP7niYMwcOURgvXNH5hmU04/qlkMTaMs1jumFixdKIUCXwfDQpiQlBxjLQVZVKoYys
      2uiuh2orJPQklmqSlnHqpSrhZK/aeqk6a60g6fm4VR/0JKqZxK2M4oxfILArCypYzglV7rv/
      fratX4GPgSJD9HSeuCIRUpLP34BSkYrC2q07WNUex1dVrEWeTz2v+Eop+fznP8+vPP2Btx0c
      pioK793xCLteepGP/szPznuuYZmYlok/WftSUyGs1khn8tSrNrFYGs+emUtgV+rolkHgXbI2
      yUASD+KIQoUwqJJMJkHXqJfnT8oQQsEjT9xwkZN5C15ljJgZR1kg/oFMbtIsbPWQmXas6wZt
      MmXoc+jIETatXc328CKDRYeN3YvXVDyv+EopOXP0OOt6V12Xmz24+R4OHTmIlZgZ4x9hxi2k
      7VAZHMWZqCBDgVco4I9PEFZsFKlTK9YahWGnEQbhlMEfETgucjICVLgu9eJMy9FseI6HPyWa
      Vc4oz3KnoeoWy5Mqh4+d4NCEz5r2FrVYSkYH+xkuFPFrJY4cOczYeJEjB/dz8MgJvGDhfXfz
      TmVCCGTdnbUq8KGzJ9i8ah2u52JZMZCCo8eOkOvppi3bgSYCNM2gNRi0p62D4cEhEtkkVjKG
      Z7tNx1gYCnzXQ5USz7mU7ueWqhiWBVJixGKEgUSfVI+mqy+qrqEbBqE/1dyqx0zwTYQXoKUz
      CPvK/RFSsYCGF1mzkih3uk9AUdjx+HvY0XzZqhlI4sksY+US/UWH9Rs2cOrEaTrbsgRmB4am
      EIYhUkqCOWq83mwuv5YLOav6U3dd9h3eg5mIUfMtKuUKWuhiSxtUjePHDhIke3h664bmeyzD
      xHWchkPE0NGNxu2llFQrFdyaixlMtbdLYERVSKczJFWNdNLAyqSol6q4NYfIziYBI25iWCaB
      HxBOBt+pqgR7EBQXNaaiWgpchVVTMZIElkWpNoFnl9HcGql4mnyyDe0O9Q3MqQ4rKvF4DKVc
      AimRyMaeqeX8qGT7jOrUt4h5BUBRFNDURh7vLB861JPcvXY1ew4cRjHSWEpIGAYUxi7w/7d3
      7lFyXPWd/9S7qt89PW9pJFmSZcvCCFty7OAki4kJXjjmHBbWcVhMwFkSkiwQwjksC4RdEuLA
      7ibBS8LCwRwghiXLhs3i8DAGk4QF2QSvHWzJ1vsxes2r39Vd1VV16+4fPTOa0fQ8JM3IIzSf
      +aOru6urqqfvr+69v9/9fX+Kk6HRmu0i81o+TnK2J0nEgpHKWVzfRRoxXuSR1Aws0b40M2nT
      k7JRg7ZmkGabiCAkKNdQNA2p68SaQpMI13PBV7A0nZRlYRomsTdO5E6uA5KCyB1BIY9kaXOa
      WquK659TrghFiB/6uJ7L+sJ69Ku9R5hJLBgdPUPD9Rga7OfIwSP0D12DhU+smrPa0BVjAGrS
      JhIC87wL3rFp6+SWyQ3bduK6ZUJ6ySVtVAUmKjUSqeysz5yeGGPd0NC0hn8cRYy749S9c4JX
      kYyom4KU04ciFRRTp9lsYJoWfthCrQc4ho0UMZquIy0dNw6YHg1JiR+FhCIibxioYnZXqyqg
      6ipiEbU4aAt6NUWz40zJDz3Ga+P05wbWssemUDUGhzYxOPl0ezY/ubV6k4sWNYAbXvZS9h47
      xM3bbpj13sxkdccycazZhRXW982NGex57hlu2nUzpeIEqqJgWw41b+6ENEZSDRuEbltLKJ1O
      T/r+2/OSUBcYOZ2YFrHpEHtzG7OQEi8MSTp58KvTk1c92UVKz1Idryz01QEI1YhYmX/i5vp1
      RNy7tmr0CmbBfkhRFN70pjfx5e9+45L930II/n7f09yyexexEERRhB/4zCfi0/L86XOer4Gj
      qAqRbOL7ZVoLLFMwdRU7mUbmhmiYeVyrB1dLIwwVO71wUE83DYQtWGikJGKBiFfHZG7VMTnR
      lTImikLCaHUKDix669q+fTtBzmH/iaNs37Rlsd3n5f/838d5+atfSS6Xm3ZhqopKwkri+rN7
      AQWFrnyBykR5ejGbZpqEUYihGwTohGoGW49oxWLerxEJwZlSqZ0IozoA+L5H3ffQVBU7bSOb
      wXTFxClM2yLbm8ev+rTE/AJUqqKiKqtjLLvaKI2eYqxSx7AyNMuniYw8efKFXAAAFsJJREFU
      O7ZvxVxC3vblZEmrQc+ePctv3/c2PvPuD9GVzi62+xwOnjzOG//wvdx516s5O3yEqFFCigBV
      M1DMBDKZYeeul3H7L72cDRs30JvtI5/qQghBw3UpFYvEcbvoW75QoCHaWp9p/zSqblDSchdd
      JjWfTJHQDcJWiFdv9yZTXgphx4w35i/Ml7CSDBU2rM0BOnD06GE2btrCoUP76c4kiIwC/d3t
      gNmLtRo0jiWRiAmFIIxiglAszQCChsc/PPY9vvO3j3DvL/0KL9t6/dJOKGNGi8d48KufYvOA
      xi/ffA0b+7Lo2rnqhSKOaXghTzx/ikefOk7PphvY9YrXsfOmXfT393NqeHhW0EtRVfLdPShx
      iE0L1bCIVZtiuYw0TFR9Mmd4iX5mBejJ5hBui7A1O7qsaCq+4VHzanMUrm3Dpj8/iG3MH9S7
      mjlz7CC+ahBGBoWEWNAAIhHz2E+OUHF9RNwudNh+lB2et7dFHCPEzOftyphiqpFHgnDqMRIE
      UUwcSzRVaeeOq0pbWn8pBlAdHkEEIbV6jQcf+jTJZsRvvvZfM9DdWVlNSkm5NkocPUtXuoRl
      LN1fHseSvcfH+LOv7+XnX3sfr3zFHXMqHnbnEujxjBRHRUWGJhVdo5DLU264tC4g40hXNZKh
      0nGMmunJ4oYuxfo4Io4xNIOuVDdpJ702/FkAGQsaDQ8nmUSRMVJR0SajoucbQBgJHvnRAerN
      AE1t977apECCpipoqjotmKBNvjf9qE09P7etayqGpmHoKoZ+7lHX1MnqoZyrJLoUA/CrLl6p
      iqJp2N1Z9jyxh4c//0UsL+Smzddz7dBGkrZDpV7j+RNHCILTvOXOfgYKzkX/A/0g4tPfeIaD
      wXre9e73YJptzU9N0+hOaSjy3B1eApFiEccKqmFQFXKykN7SyWDAeaF6RVWIkzFuOHuOkrYy
      5BNr4lkXy2pKiFmSAUgpadRq+L5PLOPpMXKxXGbfvuc5fPgwzWaT/fv3E5x5lofe+xry6Ytv
      /FPEUvK1H+znOycc3v8fPoRlWRR6elCDKvEMZTgJRFjEUkECdUVdcqBrip5kmqDunVteoQA2
      1GWt4/7dyR6SVvrivthVzhVlAFJK3FoNz+vsbszm8piWxbFjx/jwu97CJ3/z55el8c88/xe/
      8yynEjt4z+/9Di3dhqiF1QpQJkfmsWoSaUmUKECzLEp+a5HKYXPpz3Xh+SFRK8AxDWzHouiP
      40edEz4cw6E3fWlLxK9WVpMBLDqIDcNw3sYPUK9ViaKID7//9/nIr920rI0f2mO1t961k4m9
      /8CeHz9FvVXDjUOwbOI4piETnKqpnC171IVBMpVZtEr6+aiKgusHNMOIQFXxAM3QiBdY+bnQ
      e2tcOSxqAMECBe6gHZn94he+wB0bY7YM5hfc91L4j/fdzmf/4lM4apKs4aBGPjJsUvXP+Wfq
      TR8/iEh2kFRfiIRlIWbk0UYiIvDKGOoCso7a6g3vr7F0FjWATuvuZxKGIY985SHe/KqXLNtF
      dSKfdvjlrQb/+N0fYKCg2BmswmZ0ffZiNLcyTFA7PmuSvBCaqpJLpkja5wpr2FpM6E2QMqyO
      nh5V0UjbFx4PWWP1sagBaIusc3n8+9/nNTu7MfWVXxp87x07+F//4wuM1COKXowXCvoKKWxL
      R9dVCgmJjFyII6zY7ZjHMBNVUSkkE0ivguGPk5NV8rpPNpnESA8hFJve9AAaJsrkn6079KX7
      0RfoHda4cljUAGzHntfdJ6XkW9/8Jm/8F9svi0swm7Lp08qcPHmSSEpU0yCIm9jJFlKrkMlk
      0A0HRVHRdIfebA7HMOb4gxRFIWGadOsRsniUVmmYsD6GbE4QV0/jjRwgdMuEkaBY9qhXVcJm
      gsHsEL3pfkzdWnOB/oyw6G1M03TSmSz1SZGpmUgpCUon6MosLTK8HPzijgGeeeopbrjuOhK6
      QeSFGNIhnXQwDRs11Y3wPKJqQKjXEdUSmpQkcgUM22l7kCwHvDJBbaTjOWQcgTuKpcBYU0VK
      aAWCIIyRxLTCdlaTpqk4po6pL1zq6WpBxoKTJ47TaEb0DeQ4c3aMbK6X8ugJhJHlhu3XYl2J
      4ri246DpGs16nbAVoGgqlpOgXKnQl4gv0ON+adywsYenDxwnq6i0xsZAtj3+GhB4IYqtYCRT
      6JZGsTg2LZEeujVymQy+O0IctiVPFkO4YySNPuqyHWWsNluzA2whNPwAx9TJJZ1paffLRRS0
      8FpBW5NVNzCMyzEsk3huHV+o5DKp2cJXisrA4AAHDhxjvFJn+/YdHDp4kMGBPiKjgKkpV6Y2
      qIxjRLmCUq1hRBGKrqOjMHziBJv6s4vf/aTk2KkJtGQCC4W+rgQtz0MYDokL/M26swkmTg8T
      1etzaoJJIZBNBSPhoCQN1IqGmEyIUTUNRdWwMr0EtbGlJbdLScEKyXf1U27480aXvSBCSo+u
      9OWtORwGPs8/u48N12+lNlanb10vmaRNtd4gk8lOLz1YTqSI+ObfPUIkDF59zxvIz1SGkxH7
      9j3P+mu2US+OUG/Ukco558Jq1AZdkjCWPzZGq1iaVlaQUUSrWGL82DHSicXdgaeGR/CMBIWE
      ypM/PcE/HRyj4XnUGg1++Owp9p6uMnymyHPHJogWCUzbpo7nzm38My6YsFZDAVKZHIZpYSeS
      5Lr72imVVhIZLb3GrggaNDsI8J6PH0b4S9hvOXFSWXLZLN2FHL7vcXb4JPsPPM/E2DBHTi2e
      8HMxSBlTrxUpnT3J//6bb1D2Z97JFbq68lRLRQY3DFEr1di0eSOZrl7y2eWNDy0Xi95/ZRgR
      lDv/M9UoIlyC3PmYG7FlwCFpCtb1F8jFIWfLLpGVJtvTS7NaRNFjXjhVpr+/ix5nIdFduWig
      Kw4CGtUyYdDCsiwyhV7UGZ+5EJW3WAhanapcdqAZhNim/qLMB1KZHDYBTQlBAP35lWlwqm7x
      1n/7Oxw+fJSBjZtJzRDGVVSdDTNyRjZsHJrcWp2NH5ZgAGKBiuRduTw/qS6uDblzSxeP/fQE
      6/rT5NIWSTRMTUMYJqqmYAubYqlCJulgLtIn1b2AZOp8GajzkJJ4qreSkjgWswxA1QzEEnsB
      eQHuzkhc/ujwdS/ZAcCWLeunXxNi9vddTmQc8bW//hIbr9/Jnq/8Na+7917yzuoYzlwMi/66
      ygL+/WuGhjg6Up1XNWIKzU5y1+5N7eN12i+fZ+u63Pzvz+D0RI2BgaEF91FUlUQmR6NRI5AR
      Vb8GPpi6iWMm0JwsouUueIwpVDszX9bm3PMubbcV50KXglwIMhaUajXSE+OIWp2iH/xsG4Bm
      26iWRdyhJ3CyWepafnJYsvDPv1jDXuqw4cnnT3Prq1638E6WSdmvUGlVELGY0rUCQFM1ck4G
      RzNBzJVXnHVNuoWV6aFW85ZSgxvjMgQDzyfwPRTDwtAW7jqDIJheUn4pKKrBq+66m9rYKfyt
      2xhIXtkJQYtOghVFITE4gHreP081TRI9aXbc+BKePtzZn77cxFLyzHCT3bffjjLPXS7WVMai
      GkW32G785yFiQbFRpqTqC1aDVDQDu7ARTdOnaxQvRtI2L/P4X3LkwF7OjJfx3BpjoyOMjY1R
      b/q41TKlSp3A9yiXq9Rcl6jVpFSq4HkNSqUKYRhQLpcvaPIuRcBz+w8QiJgCHqcrV7Y8+pIG
      uJptk9y4kajhEochqmGgJ1NIGXDvvffwuQf+Pbu3rbw+zt5jY/RsvZlMoQAtj6hWQ0Yx7fJ4
      oNomVenjBQsv4ANoxgLdytClKgivNl24T1E1NCeDkemjFcZ4pRKxBBFJNGP+O2jaMS/LcpCZ
      xK0avpKgNTZKWFUpZDXONvLotRPUS1VMy0RHITEwRG38LBVDpad/CM+tcuzgfuzezbS8Blu2
      bMVeoNDFTBTdICUanC0JavWAndnZPYCU7VRFXVNxGw0cx8bzPCQqyURixWMl7TmfbJfFElOP
      51Il/VaEF4Q0/RDXC5deI0zVNczs7AVgfrPFQH+eolbgxGiVTf25Zf9CU0gp+cw3n+VfvutP
      OHz2LGlDkrEkQewi7DSoGhBTbyxtbA9QDzzyPZtI5NYRi7Y7b6JU5pGv/R0//P6jeOPHsOIG
      oNBQUiT7r+UX7nwNr3jlnSRTqem0urRjkZynTNBKUqnUyOe7COslAt0hnTZpaGmiZh3LUDGS
      WVKqQqG3C688jqVJRs6OI4RLJu0QmQ7ZuMHIRJVssndJ51QUjTte+waEiNC08zxeMmb48GEi
      K0lGC3HDmCg2iJvjREYX27Zu7DjkkFIyUW3iegFBKAgi0X6csd2KBGEoaE2+1pp8vxVGk4/n
      9hcinjYAMWkA0WROsWVoOJZBwtJJJcyl1wjrRLV4HN+rcPDQUb70if/MX77zTvRFxqIXy4/2
      nuTzz5u8+/0fmJbVy1mQ1CLMVA+GblGqT1BulC/ouF2pAr3ZPlqtFp/8bw/y1COf4XVbQ27f
      kqBrRo1iKSVnaxGP73d57Eyeu+9/H796zz04trUiAadLRUqJlMy+48p2qqiigJTtHFshBKqq
      LVspIxEEnBodRYSttirEwf10Z9uqEH2FJEIIyuUyudy5m2UrFHz0r35I2fUwDR1TVzF1rb1t
      aJPb2ozXp16b+9zQ29uW0X7dMnQsQ8MytY5LVi7JAAK/TrU8jCdiPvPZL7E9Osib77zx4v97
      81BttLj3T/+RD3/yITIzeiHbMNjS3z/9/MT4MbzgwsakCSuJIxO8/dffxBt7D3D3S9Ooi7SG
      IIr5zI8qnO5/Lf/lzx4kkVilJZQuN7Hg9PBxToyMs76ngBtEaHaWgh2uClmUTlySAQA0W02G
      J44jIsEDH/xP/MbNSV5506ZlujzwWiH3//n3eNP7PsbmbdtmvWcbBpt6uohFiG44HBs7ShAt
      7Nk5H7fa4I/e+e/44O4i2/svzKPx2At1vtm8lU899FfY9pXtDVkJ5utdVpMBXPJ4Rdc0FBQ0
      XeMjf/IxHn4m5BtPHFqOa6NU8/itB7/HW9/+fnbtmJtwYykBxZH9lMYOURo7uOid+3zCMOTj
      f/AHvOel4xfc+AFedX2KX1Sf4GMPfPSCP3s1oGnLN7RaKS7ZAEzdYkPPJga71tOVG+QDD/w5
      3xnp4WNfeYKGf2F34ymklDz5/Cne8Zc/4m33v4/bduwgUamQUbW2RoyikDENTFGfXtYQhT5q
      tLj3Zybf/dZ3uU15jl0bLm4IoygK/2pnhuKez/P0009f1DHWeHG55CHQTMYqLqGIEULwrUe+
      zvf+5iHu+4V1/MruzTjz1OidiZSSQ6dLPPTtvQTpa/nd+942q9aVkclAPodbr5ExTWre6Wn3
      JYBuZSiGwZIS1n3f5yO/9Rv89ztbJK1Luw8MlwI+cfIWPvuFL1/ScX6WcEujHJ8nH2A1DYGW
      dQF5OmFR99rr4++48y527vo5fvT4t/nyg1/nJQM6r9g5xNbBLlKOia6rxLHEDyImqk327DvF
      D18Yx+65lre96+PcuO06WqOjs44vwgiqTWxVx8zkcBSPpjsOtN1zmWw/SuAxVh3tdHmzeGHv
      C9xojZC0Lv2HWJ83aD7+/VX1w77YjHXIB1htyTCwzAbgmAaOaSClxNBUChmb7b/+b3jzr76B
      557by98/+SQPP3Mczy3juXUMw8Q0Hbp6Brl119186N5d9PX0oCgKMmihqCpyKilfURBCIW60
      vTxR0ieVHcSwkoiohWVn0XSLvOEQxzHF+sQcPc8pFBR++pOfcufW5VmlqCoKt61X2bNnD3ff
      ffeyHPNKR4vjOfkAq5EVSSFSFIWUY4HvEsUxlmmye9fN7N51M5quk8p30yiV0Fqtedf1yyhC
      c2yQEtV2MDMZmhV32gCUyVpTtjM3+FZId5OwEhTdIs1Wc3qeMCXH3pUqUB8ZYd3g8gWvrusz
      +ecXXlgzgEk2bBzi5JkJNm3eiBYHSHV1GsKK5dC1KwHOTXsTUYTwvAUb/xTKZMBLTyZQbYtk
      j0HLNtEMHd2ZPxFHURQSVpKElUTEgmgyyqtrxnRhu6ZbxTGXz0WRS2iUyxcWhLtYXNedUzRk
      NZJMJWjWpnJJmkzF6BuNhWs0X05WzAAUpV0IbSon99zrCuFkFcGlElaraI6Dqms4+UVyAc5D
      U7WO1RwNyyYUyzb/xwslifzlCYilUilSqSu3ODWw6FxJSokQAl1fuIlGUbToPu14hNpxrdoK
      ZlEr2IkUzXp19glVrZ2ydCFISeS6c9YiXQo9g5soNv4f/ZnlGQYdLwZcc/M1y3Ksq4k4aHLw
      6DCmaRBECluv3cxUEZmZlSS9RtvDGLVa+BIGe3vm7FMbP83wWI11Gzfj14oMDA7O2ScOfQ4c
      OkwUSSTqpccB5kNRFEwnQTLXhWHZGJZNMptfUG5wIeJWa1lrTP3cbS/nn44vz1JeKSU/PtHi
      tttuW5bjXU2EDRdp2uRzOWg1CaZ9HrNrCR8/fIBqo4nXaM5KUZ25T8vzGdy0idHhw4xOnEvj
      VRTlXEGWIMDKdJFMJlmfNlayB5g0AsvGnKHV6dfmVoVcCvEyVxa//fbb+eon0rxlsmrIpVBv
      xYwnrmfLlouvoXa1YuV7WK+UaPghg5u3kphnRfm2HTfSCsSkqkTn36uwbiOtIGRo4waiuPO9
      XU+kGNStSe+isnI9wGqnUChwwx338oNDlzYhk1LyP5+uc8/b3rkmjnURhI0qwyMTbVGtY0dp
      zRPDPHHkEMVymVPHjzBR69xz1yfOMnxmlGq5zJmR8Y77xGHA0SOHqZTLHDt48PIbgLLIhGU+
      1Iv83LzXoSi843ffycOHuphwL753eWGkxT8rN/P6179+Ga/uKkK2J6mRiBDx/EPcdrnViDCK
      mC9JW9KeFEdRyPyHku0yvUIQifjyG4B2kasmVWv59TgLhQLv/eNP8YFHmzSDC1d0OFMJ+diP
      HT76X/9iUU/EGp3REynSpobntUjlupjPM53P5wl8HzSTbDrZcZ9kNodBhN+KKHR1lupXDYts
      OoHXbGLnul4cA7jgXkBR0FfI7Xfrrbfy9j/6Avd/tcpYfek9wXOnPX7/cZMHPv1VNmzYsCLX
      djXgF0dRuwbZtm0bhlfBnec+NF522XbdNjat65l3eFM8c5beTdvYtu1ayuNnO+4TNV0CLcG2
      664jJxrLuxhuqQjfp1UsLjkWYORy6Mnkio6xDx8+zPt/7x3cYuzj13bnyM8zGztVDvnckxXq
      Q3fxxx//U7q7u1fsmn5Wmb1mSnL4hX2oVgLVTLJhfV/Hu3Jl7CRnyi10BTZccw12h8qjIvR4
      Yf8REgmLZL6fvq5ONdwkw4cPEKomUllhL9B8qJaFmc8TlMuLGoGRyax44wfYunUrX/nbb/Po
      o4/ywYc/hzjzDBuSHr1pnTiWnKlGnAqy5K69nfv/8Le55ZZbVlR/52rBL43iqyZqpFCggQd0
      GuCcGS2hqDo9g0NMFMdZPyMTcIqJ0yfRbRPV6aJZGYcOBhA1XWqBQMqQdc4yL4e+EKSUyDAk
      rNXa6nPnXYZqWRjp9IqM/RdDCEG1WuXEiROMjo6iqirr169n/fr1pNPpNW/PJTKzBxBehTNV
      SUb3OXDwNDe+fHdHIcXhE8cZGOjjwL79ZAaH2NA3t+etTZwhsgt4EycZrUXc/NK5sv1x6HNq
      tEJPRufZpw++eAYwhZQSKQRxGEIcg6KgmiaKtqa5/7OK53k4zrlmPqUsKKUERemosNdupgpT
      HqDObaMtBNBO+p9fbG3m+V50A1hjjReTqzYQtsYasGYAa1zlrBnAGlc1/x8WHa5jWDoj6AAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP' width='192'>
      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
      5f8Df4tqDjFNyakAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='82' name='LE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobile' width='192'>
      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
      /n8Wl/8HBC4H7Ymk6sYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Per' width='192'>
      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
    </thumbnail>
    <thumbnail height='91' name='Pop' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABbCAYAAAAlfYqHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHf0lEQVR4nO3df0zU9x3H8Wd7FOVazlOUalkEnT+IuDNqit2oGmWlmVYLs01dtcsEA4nr
      6jILq9M2iKksukhjqnWNgr8wRdtYdXVbXauwstmgNmJNZUyHtFRBrly9euDJN+wP8OcUCMcp
      8/N6/Pc97/vlY/J98r2fb+5raWlpQcRQ99/tBYjcTQpAjKYAxGgKQIymAMRoCkCMpgDEaCEd
      3eHw4cN3Yh0id8V9Hb0R5vP57tRa7kl2u/1uL0HaoYdAYjQFIEZTAGI0BSBGUwBiNAUgRlMA
      YjQFIEbr8J3g26ncu4r3T/7v7f0npjLvsYhA1nSTUl6flE/Mto3MGdyNhxWhO64A31VSvPco
      Zzu9QzWFaZN4vTTgnywSsC5fAYbPyCRzBlBdyMkDVczKzCTh+jtYDfyr7BCnGsIYOCoeV7Qd
      GxY+jwdfM1y64MbtBluYE6fdhuWrpaL8C+qaoHdkHONGDSA04P+eSPu6HEC7rCoKF6Sx2T+B
      J0bBjrwV2DM2sHZWCB+uWMb7X8Hl9Quo2ATRP8tjZXIz72T+ik/6PM7Qvo38p3Q5b81cS35q
      LLagLFCkVVAC8B3cSH5zKgUFcxgMWDPe5oVfbqU0eQnJK/O4mDaXqtQilly9ZFjMXrObOW1n
      uzV1NU+vO0JNaix62C/BFJQAqk9VEDFhztWT1xYbR9zlfKpqIOE2Z/T5I4VsKNjD8W+A5u9o
      dD4fjKWJ3CAoAdgfDMdX39j5HSo385ucL5lXsJWlA0KhupC0ZcFYmciNgvI+QNQoFyH791B8
      oXX7QvHf+Of3EogfDPAgD4XD2ZqzWFd2qDvLVzGjGTMgFPBTc+wEtcFYmMhNgnIFsI2dx6s/
      WcjilOmscYLHG0P620sZDkAEU56dztbXnmPKmzA8YxsbUxKZmbeEuU/vIJz7GTY1lu58J0Hk
      doL6jTDL58HTCGFOJ/abX87xe3F7ITwivPXlTsuHx+Mn9Fb3/T+mb4T1bPpKZJApgJ5NnwUS
      oykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZoCEKMpADGa
      AhCjKQAxWgABuDlUsIq9lR3ddqPqwjQmaTCo9BABBHCRU5/spbyuo9tEeq7gzAZt4/e68dmc
      OHtd4kz557SMjL9anL/mM/5R+S19hlwZnAvgx3v6BEeqvwX6MCTeRXTbiIgrx7JfrODoiTp4
      ZAyPjuir2aESkKAGULYmhfyYdaRWLWXxXyPI2BbPRIDilaS7xxPX+0sOfvoGP8rZwpIEB5Tm
      MfutWiaMGUTY+XKWr4jhd+8uJ9HReqzcz6Lo1XsQY0Zcprx4OWNzPmRJghKQrgtqAAC1O7PZ
      Pi2H3Qdc9LVBNcDkLDa1TcbN2JfFU1v+zLyE53j4sZf54OoJXcfQF5/h0HFIbBuiGzEzl80/
      jwEsipdNYUt7w0ZFOiHgV4Gam63rttzU1zp46LpROA8/u5q16a0n/604BkXhqDlHLT4OZieR
      VlCBzwKIZOCgG+8bYruyXBshQU9XTBBAAFHExjko2V7Iv/0AFg0f72F/41hGj+zkIaxz7Nu5
      H6Y+jot6zn0dRpxrGHYbWA3lHDvd9dWJdEYAv0dtjJ+/jJ8uXEzqjze03vRAJNNz8klsdxha
      b6Iq3yQpaRk0NcEPfsHqV8ZjAyZOi2Z+1kxK+4fQbE9i8oCur06kM7phNGLrnz1qtGy3ngF6
      O34vnmY7zpt28HvdeAknIvze+ANJGo3Ys2k2aJApgJ5NH4UQoykAMZoCEKMpADGaAhCjKQAx
      mgIQoykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZoCEKMpADGaAhCjKQAxWgBfindzqCCfv9e3
      bvX7/qOMG3/9lLfuVE1h2lyqUktoGyck0i0Cng169Gzr1jeHC1mamsxL71V3z8pE7oCAx0uN
      npVJZttv5Yx9WTy16S+cnJVOrOXD47GwR4QTCmD58Hgh3GnHhh+v24fN6aTXpTOUf97CyPgY
      7H4vp08coXU06BDiXdGdnzIh0gXd+hzA0acP+BppBKjZxaKUNZRd+ceaXSxatIsaAMpYk7KI
      XV+U8vvnX2DhH0upB0rzZvPa1hLKysrYtzqV5OyPuNCdCxS5ScBXgEsX3Ljd0FT7KdvWf0y/
      J/6Aq1N71rIzezvTcnZzwNUXGxZRL3/AtdGgQ3nxmUMcJxE97JdgCTiAg7kpHAQgikkL8yhI
      dnXySbCdhKxc0l2Otm0bF6v2sXXtDkpqGoEmGogPdHki7Qr4IdCTuSWU/CmXJ/vVcb7JgaPT
      j9nDeWSg49qm7yNWpb+HPWMd24uKKCrKYnKgixPpQPc8B3Ak8Mr63xK5M52Xiqq4Ni+6mWYL
      sHycqTiFt71j1J/j67A4XMPs2LBoKD+GZuNKsHXbkHHbwCSy3zjPgrRfk913PdmJoxgXmc+r
      UybBA5H8MGlE+wcYPJFp0fPJmllK/5Bm7EmT0WxcCbbgzga1fHg8fkI7PTTXj9fthfAI7pHZ
      uJoN2sNpOG6QKYCeTZ8FEqMpADGaAhCjKQAxmgIQo/0X3KNUub5IALwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pop - Sep' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
